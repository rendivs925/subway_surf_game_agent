warning: variable does not need to be mutable
   --> src/detection.rs:444:9
    |
444 |     let mut cur = segments[0];
    |         ----^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `hsv`
   --> src/detection.rs:653:39
    |
653 | fn detect_mystery_hurdles(gray: &Mat, hsv: &Mat, w: i32, h: i32) -> opencv::Result<Vec<Detection>> {
    |                                       ^^^ help: if this is intentional, prefix it with an underscore: `_hsv`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `tt`
    --> src/detection.rs:1098:18
     |
1098 |     if let Some((tt, tb)) = exit_ok(
     |                  ^^ help: if this is intentional, prefix it with an underscore: `_tt`

warning: unused variable: `tt`
    --> src/detection.rs:1110:18
     |
1110 |     if let Some((tt, tb)) = exit_ok(
     |                  ^^ help: if this is intentional, prefix it with an underscore: `_tt`

warning: unused variable: `tt`
    --> src/detection.rs:1122:18
     |
1122 |     if let Some((tt, tb)) = exit_ok(
     |                  ^^ help: if this is intentional, prefix it with an underscore: `_tt`

warning: unused variable: `left`
    --> src/detection.rs:1132:10
     |
1132 |     let (left, center, right) = lanes_snapshot(tracks, frame_w, frame_h);
     |          ^^^^ help: if this is intentional, prefix it with an underscore: `_left`

warning: unused variable: `right`
    --> src/detection.rs:1132:24
     |
1132 |     let (left, center, right) = lanes_snapshot(tracks, frame_w, frame_h);
     |                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_right`

warning: value assigned to `cx` is never read
    --> src/detection.rs:1154:13
     |
1154 |     let mut cx = 0.0;
     |             ^^
     |
     = help: maybe it is overwritten before being read?
     = note: `#[warn(unused_assignments)]` on by default

warning: unused variable: `frame_bytes`
    --> src/detection.rs:1308:22
     |
1308 | fn detect_hill_climb(frame_bytes: &[u8]) -> Result<DetectionResponse, Box<dyn std::error::Error>> {
     |                      ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_frame_bytes`

warning: unused variable: `frame_bytes`
    --> src/detection.rs:1313:5
     |
1313 |     frame_bytes: &[u8],
     |     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_frame_bytes`

warning: unused variable: `resp`
    --> src/detection.rs:1318:23
     |
1318 | fn decide_hill_action(resp: &DetectionResponse) -> Option<ActionPlan> {
     |                       ^^^^ help: if this is intentional, prefix it with an underscore: `_resp`

warning: unused variable: `resp`
    --> src/detection.rs:1322:26
     |
1322 | fn decide_general_action(resp: &DetectionResponse) -> Option<ActionPlan> {
     |                          ^^^^ help: if this is intentional, prefix it with an underscore: `_resp`

warning: `subway-surfers-bot` (lib) generated 12 warnings (run `cargo fix --lib -p subway-surfers-bot` to apply 1 suggestion)
warning: method `get_source` is never used
  --> src/main.rs:92:16
   |
46 |     impl FrameCapture {
   |     ----------------- method in this implementation
...
92 |         pub fn get_source(&self) -> &str {
   |                ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `screen_width` is never read
   --> src/main.rs:435:9
    |
434 |     pub struct GameDecisionEngine {
    |                ------------------ field in this struct
435 |         screen_width: f32,
    |         ^^^^^^^^^^^^

warning: `subway-surfers-bot` (bin "subway-surfers-bot") generated 2 warnings
    Finished `release` profile [optimized] target(s) in 0.04s
     Running `/home/rendi/.cache/cargo-target/subway_surf_game_agent/release/subway-surfers-bot`
🎮 Subway Surfers Bot Starting...
⚙️  Applied Subway Surfers detection profile
✅ Frame capture initialized using: /dev/video2 (scrcpy v4l2loopback)
✅ All components initialized successfully
🚀 Starting game automation loop...
📊 Stats: 100 frames, 14.5 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 200 frames, 14.7 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 300 frames, 14.8 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 400 frames, 14.8 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 500 frames, 14.8 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 600 frames, 14.8 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 700 frames, 14.9 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 800 frames, 14.9 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 900 frames, 14.9 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 1000 frames, 14.9 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 1100 frames, 14.9 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
📊 Stats: 1200 frames, 14.9 FPS, 4.0 total avg detections/frame (YOLO: 4.0, CV: 0.0)
⚙️  Config: latency_budget=150ms, crop_top=10.0%
